import numpy as np
import csv

def is_float(string):
    try:
        float(string)
        return True
    except ValueError:
        return False

def frextract(filepath, var, qqrng):
    novar = 'mu' if var == 'pi' else 'pi'
    QQstring = 'QQ' + var + var
    noQQstring = 'QQ' + novar + novar
    list_fracs = [[], [], [], [], [], [], [], [], []]
    with open(filepath, 'r') as buf:
        flg = 0
        err = 0 # To check for correct formatting
        cols = [QQstring,'ppg','dppg','mmg','dmmg','eeg','deeg','ppp','dppp']
        posdict = {}
        for line in buf:
            line = line.replace(' ','')
            line.strip('\t')
            linlist = line.split('\t')
            linlist[-1] = linlist[-1].replace('\n','')

            if QQstring in linlist:
                flg = 1
                for name in cols:
                    posdict[name] = linlist.index(name)
                
            if noQQstring in linlist:
                flg = 0

            if len(linlist) < 5:
                continue

            if not False in map(is_float,linlist) and flg:
                for sublist,name in zip(list_fracs,cols):
                    if float(qqrng[0]) <= float(linlist[posdict[QQstring]]) <= float(qqrng[1]):
                        sublist.append(float(linlist[posdict[name]]))
    
        # Error handling for when the file is wrongly formatted (not all chanels or QQ, channel repeated twice, wrong number of tabs...) !!!!

                   # for name in cols:
                   #     if line.find(f'\t{name}') < 0:
                    #        pass


    return np.transpose(np.array(list_fracs))

def reswrite(fracts, resids, dresids, filename1, filename2, variable, filepath = 'residuals.dat'):
    QQstring = 'QQ' + variable + variable
    with open(filepath, encoding='utf-8', mode='w') as buf:
        '''
        writer = csv.writer(buf, delimiter='\t')
        printarr = np.stack([fracts,resids,dresids],axis=1) 
        writer.writerows(zip(a,b))
        '''
        buf.write("\nResiduals generated by the frac-comp program\n\n"
                 f"Calculated as difference between {filename1} and {filename2} in {QQstring}\n"
                 "---------------------------------------------------------------------------- \n\n"
                 f"{QQstring}     res(ppg)       dres(ppg)      res(mmg)       dres(mmg)      res(eeg)       dres(eeg)      res(ppp)       dres(ppp)\n"
                 "\n")
        for i in range(resids.shape[0]):
            buf.write(f"{fracts[i][0]:9.2f}      {resids[i][0]:9.2e}      {dresids[i][0]:9.2e}      {resids[i][1]:9.2e}      {dresids[i][1]:9.2e}      {resids[i][2]:9.2e}      {dresids[i][2]:9.2e}      {resids[i][3]:9.2e}      {dresids[i][3]:9.2e}\n".lstrip())


                

if __name__ == '__main__':
    frextract('fracfile.txt','pi')#,(0.58,0.62))

